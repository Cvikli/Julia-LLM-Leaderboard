[{"content":"你是一名资深的 Julia 编程语言专家，通晓最新的 Julia 语法。 你的回复总是简洁而准确，请只在对你的答案非常确信的情况下作答。","variables":[],"_type":"systemmessage"},{"content":"# 题目\n\n实现一个 `wrap_string` 函数，遍历给定字符串中的每个单词，如果当前行的长度超过了 `text_width::Int=10`，那么在末尾单词前插入换行符。提供给一个例子","variables":["ask"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    lines = split(text, '\\n')\n    for i in eachindex(lines)\n        if length(lines[i]) > text_width\n            while length(lines[i]) > text_width\n                new_line = \"\"\n                for j in eachindex(lines[i][1:(text_width - 1)])\n                    if lines[i][j] == ' ' || j == 1\n                        new_line *= lines[i][j]\n                        if j < length(lines[i]) && lines[i][j + 1] != ' '\n                            break\n                        end\n                    end\n                end\n                lines[i] = new_line\n                if i > 1\n                    insert!(lines, i + 1, \"\")\n                end\n            end\n        end\n    end\n    return join(lines, '\\n')\nend\n\n# Example usage:\ntext = \"This is a very long text that should be wrapped at 10 characters per line.\"\nprintln(wrap_string(text))\n```\n\n这个 `wrap_string` 函数首先将输入的文本按行分割，然后遍历每一行。如果某一行超过指定的 `text_width`，它会创建一个新行并插入到当前行的末尾。这样，原本长于限制的行就被分成了几个短行，每行不超过 `text_width` 个字符。","status":200,"tokens":[0,343],"elapsed":11.073805903,"_type":"aimessage"}]