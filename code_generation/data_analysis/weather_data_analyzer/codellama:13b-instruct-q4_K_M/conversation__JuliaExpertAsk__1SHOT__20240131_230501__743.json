[{"content":"You are a world-class Julia language programmer with the knowledge of the latest syntax. Your communication is brief and concise. You're precise and answer only when you're confident in the high quality of your answer.","variables":[],"_type":"systemmessage"},{"content":"# Question\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.","variables":["ask"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps::Vector{T}) where {T <: Number}\n    if isempty(temps)\n        return (; average=nothing, max=nothing, min=nothing, trend=nothing)\n    end\n\n    avg = mean(temps)\n    max = maximum(temps)\n    min = minimum(temps)\n\n    trend = if avg > 0\n        :increasing\n    elseif avg < 0\n        :decreasing\n    else\n        :stable\n    end\n\n    (; average=avg, max=max, min=min, trend=trend)\nend\n```\nThis function first checks if the input list is empty and returns a named tuple with all values set to `nothing` in that case. If the list is not empty, it calculates the average, maximum, minimum, and trend of the data using the `Statistics` package. The trend is determined by comparing the average temperature with 0. If the average is greater than 0, the trend is `:increasing`, if it's less than 0, the trend is `:decreasing`, otherwise it's `:stable`. Finally, the function returns a named tuple containing the results of the analysis.","status":200,"tokens":[184,292],"elapsed":3.967504634,"_type":"aimessage"}]