[code_generation]
criteria = ["parsed", "executed", "passed_unit_tests", "executed_examples"]
name = "weather_data_analyzer"
contributor = "svilupp"
examples = ["weather_data_analyzer([25, 27, 23, 20, 22])", "weather_data_analyzer([33, 31, 35.0, 34, 32.0, 33])", "weather_data_analyzer([])", "weather_data_analyzer([15.0, 15.0, 15.0, 15.0, 15.0])", "weather_data_analyzer([10.0, 20.0, 15.0, 25.0, 30.0])"]
imports = ["Statistics"]
prompt = "You are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`."
reference_solution = "using Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (; average=nothing, max=nothing, min=nothing, trend=nothing)\n    else\n        average = mean(temps)\n        max_temp = maximum(temps)\n        min_temp = minimum(temps)\n        trend = if all(diff(temps) .> 0)\n            :increasing\n        elseif all(diff(temps) .< 0)\n            :decreasing\n        else\n            :stable\n        end\n        return (; average=average, max=max_temp, min=min_temp, trend=trend)\n    end\nend\n"
unit_tests = ["# Test 1: Check average, max, and min for a regular dataset.\n@test weather_data_analyzer([20.0, 22.0, 25.0, 23.0, 21.0]) == (average=22.2, max=25.0, min=20.0, trend=:stable)\n", "# Test 2: Check for an empty dataset.\n@test weather_data_analyzer([]) == (average=nothing, max=nothing, min=nothing, trend=nothing)\n", "# Test 3: Identify increasing trend.\n@test weather_data_analyzer([20., 21.,22., 23., 24.]) == (average=22., max=24., min=20., trend=:increasing)\n", "# Test 4: Identify decreasing trend.\n@test weather_data_analyzer([24, 23, 22, 21, 20]) == (average=22, max=24, min=20, trend=:decreasing)\n", "# Test 5: Check for a stable trend.\n@test weather_data_analyzer(22.0ones(5)) == (average=22, max=22, min=22, trend=:stable)\n"]
version = "1.1"
