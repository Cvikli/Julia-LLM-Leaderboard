[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"First, let's write the `weather_data_analyzer` function following the problem-solving steps:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps::AbstractVector{Number})\n    if isempty(temps)\n        return (; average=nothing, max=nothing, min=nothing, trend=nothing)\n    end\n\n    stats = mean(temps), minimum(temps), maximum(temps)\n    trend = length(temps) > 1 ? (stats[2] < stats[1] && all(x -> x < stats[1], temps[2:end]) ? :decreasing : :increasing) : :stable\n\n    return (; average=stats[1], max=stats[3], min=stats[2], trend=trend)\nend\n```\n\nThe function takes a vector of temperature data as an argument, checks if it's empty, and returns a named tuple containing the average, max, min temperatures, and trend. If the list is empty, all values are set to `nothing`. The trend is determined by comparing the minimum temperature with the first temperature in the list and checking if all subsequent temperatures are lower than the first one. If so, it's decreasing; otherwise, it's increasing or stable.","status":200,"tokens":[293,298],"elapsed":13.403300333,"_type":"aimessage"}]