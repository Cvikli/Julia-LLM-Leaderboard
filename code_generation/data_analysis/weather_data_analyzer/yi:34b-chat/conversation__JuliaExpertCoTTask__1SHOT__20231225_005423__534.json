[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"# Solution\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps::Vector{T}) where T <: Real\n    if isempty(temps)\n        return (average = nothing, max = nothing, min = nothing, trend = nothing)\n    end\n\n    average = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n    diff = temps[end] - temps[1]\n    trend = if diff > 0\n        :increasing\n    elseif diff < 0\n        :decreasing\n    else\n        :stable\n    end\n\n    return (average=average, max=max_temp, min=min_temp, trend=trend)\nend\n\n# Example usage:\nprint(weather_data_analyzer([25, 27, 23, 20, 22]))\n```\n\nThis function `weather_data_analyzer` takes a list of temperatures `temps` and returns a named tuple with the average, maximum, minimum, and trend of the temperature data. The trend is determined by looking at the difference between the first and last elements in the list: if it's positive, the trend is considered increasing; if it's negative, decreasing; otherwise, stable. If the list is empty, the function returns a named tuple with all fields set to `nothing`.","status":200,"tokens":[290,313],"elapsed":47.510347958,"_type":"aimessage"}]