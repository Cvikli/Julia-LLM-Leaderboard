[{"content":"Act as a helpful AI assistant","variables":[],"_type":"systemmessage"},{"content":"You are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.","variables":[],"_type":"usermessage"},{"content":"```python\nimport statistics as stats\nfrom collections import namedtuples\n\nWeatherDataResult = namedtuple('WeatherDataResult', ['average', 'max', 'min', 'trend'])\n\ndef weather_data_analyzer(temps):\n    if not temps:\n        return WeatherDataResult(nothing=None, nothing=None, nothing=None, nothing=None)\n    \n    avg = stats.mean(temps)\n    max_value = max(temps)\n    min_value = min(temps)\n\n    if len(temps) > 1:\n        diff_list = list(zip(temps[1:], temps))\n        diff_list = [abs(x[0] - x[1]) for x in diff_list]\n        delta_avg = stats.mean(diff_list)\n        \n        if delta_avg > 0:\n            trend = 'increasing'\n        elif delta_avg < 0:\n            trend = 'decreasing'\n        else:\n            trend = 'stable'\n    else:\n        trend = 'stable'\n    \n    return WeatherDataResult(average=avg, max=max_value, min=min_value, trend=trend)","status":200,"tokens":[162,288],"elapsed":17.992128125,"_type":"aimessage"}]