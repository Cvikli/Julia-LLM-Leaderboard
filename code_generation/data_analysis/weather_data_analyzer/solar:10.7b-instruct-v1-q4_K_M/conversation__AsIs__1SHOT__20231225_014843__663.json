[{"content":"Act as a helpful AI assistant","variables":[],"_type":"systemmessage"},{"content":"You are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.","variables":[],"_type":"usermessage"},{"content":"```python\nimport statistics as st\nfrom collections import namedtuple\n\nResult = namedtuple('Result', 'average max min trend')\nEmptyResult = Result(nothing, nothing, nothing, nothing)\n\ndef weather_data_analyzer(temps):\n    average = 'nothing'\n    max_temp = 'nothing'\n    min_temp = 'nothing'\n    trend = 'nothing'\n\n    if not temps:\n        return EmptyResult\n\n    avg = st.mean(temps)\n    max_temp = max(temps)\n    min_temp = min(temps)\n\n    # Check if the data has a trend\n    if len(temps) >= 2:\n        diff_list = [(t[1] - t[0]) for t in zip(temps, temps[1:])]\n        increasing = all(x > 0 for x in diff_list)\n        decreasing = all(x < 0 for x in diff_list)\n        if increasing and not decreasing:\n            trend = ':increasing'\n        elif decreasing and not increasing:\n            trend = ':decreasing'\n        else:\n            trend = ':stable'\n\n    return Result(average=avg, max_temp=max_temp, min_temp=min_temp, trend=trend)","status":200,"tokens":[162,312],"elapsed":19.373954625,"_type":"aimessage"}]