[code_generation]
criteria = ["parsed", "executed", "passed_unit_tests", "executed_examples"]
name = "audi_filter"
contributor = "svilupp"
examples = ["df_cars = DataFrame(manufacturer=[\"audi\", \"audi\", \"bmw\", \"audi\", \"audi\", \"ford\", \"audi\", \"audi\", \"toyota\", \"audi\"],\n    model=[\"a4\", \"a6\", \"3 series\", \"a4 quattro\", \"q7\", \"fusion\", \"tt\", \"a4\", \"corolla\", \"a4 quattro\"])\naudi_filter(df_cars)", "audi_filter(DataFrame(;manufacturer=String[], model=String[]))"]
imports = ["DataFrames"]
prompt = "You are given a DataFrame `df_cars` with car data with columns `manufacturer` and `model`. Write a function audi_filter that filters down the dataset to only the rows with manufacturer “audi” and model being “a4 or “a4 quattro”, then it should create a new column `audi_a4_type` that equals `true` across all rows. Then return the resulting DataFrame."
reference_solution = "using DataFrames\n\nfunction audi_filter(df::DataFrame)\n    # Filter for Audi A4 and Audi A4 Quattro\n    filtered_df = filter(row -> row.manufacturer == \"audi\" && (row.model == \"a4\" || row.model == \"a4 quattro\"), eachrow(df)) |> DataFrame\n    # Add new column\n    filtered_df.audi_a4_type .= true\n    return filtered_df\nend\n"
unit_tests = ["df_cars = DataFrame(manufacturer=[\"audi\", \"audi\", \"bmw\", \"audi\", \"audi\", \"ford\", \"audi\", \"audi\", \"toyota\", \"audi\"],\n    model=[\"a4\", \"a6\", \"3 series\", \"a4 quattro\", \"q7\", \"fusion\", \"tt\", \"a4\", \"corolla\", \"a4 quattro\"])\n\n@test size(audi_filter(df_cars), 1) == 4\n", "df_cars = DataFrame(manufacturer=[\"audi\", \"audi\", \"bmw\", \"audi\", \"audi\", \"ford\", \"audi\", \"audi\", \"toyota\", \"audi\"],\nmodel=[\"a4\", \"a6\", \"3 series\", \"a4 quattro\", \"q7\", \"fusion\", \"tt\", \"a4\", \"corolla\", \"a4 quattro\"])\n\n@test all(audi_filter(df_cars).manufacturer .== \"audi\")\n", "df_cars = DataFrame(manufacturer=[\"audi\", \"audi\", \"bmw\", \"audi\", \"audi\", \"ford\", \"audi\", \"audi\", \"toyota\", \"audi\"],\nmodel=[\"a4\", \"a6\", \"3 series\", \"a4 quattro\", \"q7\", \"fusion\", \"tt\", \"a4\", \"corolla\", \"a4 quattro\"])\n@test all(in.(audi_filter(df_cars).model, Ref([\"a4\", \"a4 quattro\"])))\n", "df_cars = DataFrame(manufacturer=[\"audi\", \"audi\", \"bmw\", \"audi\", \"audi\", \"ford\", \"audi\", \"audi\", \"toyota\", \"audi\"],\nmodel=[\"a4\", \"a6\", \"3 series\", \"a4 quattro\", \"q7\", \"fusion\", \"tt\", \"a4\", \"corolla\", \"a4 quattro\"])\n@test all(audi_filter(df_cars).audi_a4_type .== true)\n", "df_cars = DataFrame(manufacturer=[\"audi\", \"audi\", \"bmw\", \"audi\", \"audi\", \"ford\", \"audi\", \"audi\", \"toyota\", \"audi\"],\nmodel=[\"a4\", \"a6\", \"3 series\", \"a4 quattro\", \"q7\", \"fusion\", \"tt\", \"a4\", \"corolla\", \"a4 quattro\"])\n@test typeof(audi_filter(df_cars)) == DataFrame\n"]
version = "1.0"
