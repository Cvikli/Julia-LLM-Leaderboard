[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction extract_julia_code(md::String)::String\n    # Split the document into lines\n    lines = split(md, \"\\n\")\n    # Initialize variables\n    julia_code_blocks = [] # to store code blocks\n    collecting = false # flag to track if we are currently collecting a code block\n    # Iterate through lines\n    for line in lines\n        # Check for the start of a julia code block\n        if starts_with(line, \"```julia\")\n            collecting = true # start collecting lines\n        # Check for the end of a code block\n        elseif line == \"```\" && collecting\n            collecting = false # stop collecting lines\n        # Collect lines if we are within a code block\n        elseif collecting\n            push!(julia_code_blocks, line)\n        end\n    end\n    # Join collected code blocks with a newline and return\n    return join(julia_code_blocks, \"\\n\")\nend\n```","status":200,"tokens":[190,200],"elapsed":13.823510917,"_type":"aimessage"}]