[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"function extract_julia_code(md::String)::String\n    # Initialize an empty string to hold the extracted code\n    code = \"\"\n\n    # Split the markdown document into lines\n    lines = split(md, '\\n')\n\n    # Loop through each line and check if it is a code block\n    for (i, line) in enumerate(lines)\n        if startswith(line, \"```julia\")\n            # If it's a code block, extract the code inside the fences\n            code_block = lines[i+1:findfirst(isequal(\"```\"), lines[i+1:end])]\n            code *= join(code_block, '\\n') * '\\n'\n        end\n    end\n\n    return code\nend","status":200,"tokens":[0,176],"elapsed":4.894582107,"_type":"aimessage"}]