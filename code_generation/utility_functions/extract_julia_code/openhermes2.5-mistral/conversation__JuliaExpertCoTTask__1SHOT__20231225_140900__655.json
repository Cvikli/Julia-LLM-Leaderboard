[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here's a solution to your task:\n\n```julia\nusing Markdown\n\nfunction extract_julia_code(md::String)\n    parsed = parse(MetaData, md)\n    return join([block.value for block in parsed if block isa CodeBlock && block.info == \"julia\"], \"\\n\")\nend\n```\nThis function takes a markdown string as input and uses the `parse` function from the Markdown library to parse it into a MetaData object. Then, it iterates through the blocks in the parsed document, looking for CodeBlocks with an info attribute set to \"julia\". It joins these blocks together using newline characters (`\\n`) and returns them as a single string.","status":200,"tokens":[229,163],"elapsed":11.188992417,"_type":"aimessage"}]