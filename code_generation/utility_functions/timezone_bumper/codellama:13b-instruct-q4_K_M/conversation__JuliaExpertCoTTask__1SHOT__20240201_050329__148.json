[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `timezone_bumper(dt,bump)` that increases any provided timestamp by `bump::Int` hours (defaults to +3 hours). Make sure it works only for DateTime types and throws an error for Date types.\n\n\n\n# Data\n\ntimezone_bumper(DateTime(2023, 4, 10, 12, 0),3)","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction timezone_bumper(dt::DateTime, bump::Int = 3)\n    if typeof(dt) == DateTime\n        return dt + Dates.Hour(bump)\n    elseif typeof(dt) == Date\n        throw(DomainError(\"timezone_bumper only works with DateTime types\"))\n    end\nend\n```\nThis function takes two arguments: `dt` and `bump`. `dt` must be of type `DateTime`, while `bump` defaults to 3 if not specified. The function checks that the input is a `DateTime` type, and throws an error for any other type. If the input is valid, it returns the result of adding the bump value to the date-time value.","status":200,"tokens":[219,165],"elapsed":10.464056151,"_type":"aimessage"}]