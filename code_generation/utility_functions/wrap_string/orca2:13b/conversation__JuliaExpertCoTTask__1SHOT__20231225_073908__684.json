[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")\n\nfunction wrap_string(input::String, text_width::Int=10)\n  # Step 1: Think through your approach step by step\n  # Step 2: Write any functions and other code you need\n  # Step 3: Solve the task\n  # Step 4: Check that your solution is correct\n\n  # Initialize an empty string to store the wrapped text\n  output::String = \"\"\n\n  # Iterate over each word in the input string\n  for word in eachword(input)\n    # Calculate the current line length\n    curr_length::Int = length(output) + 1 + length(word)\n\n    # Check if the current line would exceed the text width limit\n    if curr_length > text_width\n      # If yes, add a new line break and append the word to the output string\n      output *= \"\\n\" * word\n    else\n      # Otherwise, simply append the word to the output string\n      output *= word * \" \"\n    end if\n  end for\n\n  # Return the wrapped text\n  return output\nend\n\n# Example\n\nwrap_string(\"This function will wrap words into lines\")","status":200,"tokens":[188,331],"elapsed":19.646716834,"_type":"aimessage"}]