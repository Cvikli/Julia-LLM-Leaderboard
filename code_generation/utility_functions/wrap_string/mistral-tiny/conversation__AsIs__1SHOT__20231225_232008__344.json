[{"content":"Act as a helpful AI assistant","variables":[],"_type":"systemmessage"},{"content":"Write a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example","variables":[],"_type":"usermessage"},{"content":"I'd be happy to help you write a function called `wrap_string` in Haskell that wraps a given string such that no line exceeds a maximum width of 10 characters. Here's the implementation:\n\n```haskell\nimport Data.List (chunksOf)\n\n-- Function to wrap the string with a maximum width of 10 characters per line\nwrap_string :: String -> String\nwrap_string str = unlines $ map (intercalate \" \" . take 10) (chunksOf 10 str)\n\n-- Example usage:\nmain :: IO ()\nmain = do\n  let inputStr = \"ThisIsASentenceThatNeedsToBeWrappedWithMaxWidthOf10CharactersPerLine.\"\n  putStrLn $ wrap_string inputStr\n```\n\nThis `wrap_string` function uses the `chunksOf` function from the `Data.List` module to divide the input string into chunks of maximum size 10 characters. Then, `map`, `intercalate`, and `unlines` are used to format the output as multiple lines.\n\nThe `main` function is an example usage of the `wrap_string` function with a long input string.","status":200,"tokens":[59,273],"elapsed":3.08123025,"_type":"aimessage"}]