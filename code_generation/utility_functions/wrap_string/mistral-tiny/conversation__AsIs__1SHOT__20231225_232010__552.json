[{"content":"Act as a helpful AI assistant","variables":[],"_type":"systemmessage"},{"content":"Write a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example","variables":[],"_type":"usermessage"},{"content":"Here's an example of a `wrap_string` function in Haskell. This function takes in a single argument, a string `text`, and returns a list of lines, each of which has a maximum width of `textWidth` (10 in this case).\n\n```haskell\nimport Data.List (words)\n\ntextWidth :: Int\ntextWidth = 10\n\nwrapString :: String -> [String]\nwrapString text = map (take textWidth . words) (lines text)\n\n-- Example usage:\nmain :: IO ()\nmain = do\n  let longString = \"This is a very long string that exceeds the text width limit of 10 characters. It will be wrapped automatically into multiple lines by the wrapString function.\"\n  putStrLn $ unlines $ wrapString longString\n```\n\nThis function uses the `Data.List` library to split the input string into words using the `words` function, and then takes a prefix of `textWidth` characters from each word using the `take` function. The lines are then automatically generated using the `lines` function from the `System.IO` library. The final result is a list of strings, each containing at most `textWidth` characters, representing the wrapped lines.","status":200,"tokens":[59,276],"elapsed":2.4254425,"_type":"aimessage"}]