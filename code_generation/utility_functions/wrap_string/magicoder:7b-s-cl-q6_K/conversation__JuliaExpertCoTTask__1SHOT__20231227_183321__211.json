[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here is a simple Julia program that accomplishes this:\n\n```julia\nfunction wrap_string(text, text_width::Int=10)\n    words = split(text, \" \")\n    lines = String[]\n    \n    current_line = \"\"\n    \n    for word in words\n        if length(current_line * \" $word\") > text_width\n            push!(lines, current_line)\n            current_line = \"$word\"\n        else\n            current_line *= \" $word\"\n        end\n    end\n    push!(lines, current_line) # add the last line after the loop\n    \n    return join(lines, \"\\n\")\nend\n```\n\nYou can run this function with your example data like so:\n\n```julia\nprintln(wrap_string(\"This function will wrap words into lines\"))\n```","status":200,"tokens":[185,194],"elapsed":10.77305525,"_type":"aimessage"}]