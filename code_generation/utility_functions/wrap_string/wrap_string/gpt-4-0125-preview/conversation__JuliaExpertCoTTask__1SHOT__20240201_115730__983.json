[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"## Approach:\n\n1. Split the input string into words.\n2. Iterate over the words, keeping track of the current line length.\n3. Add words to the current line until adding another word would exceed the `text_width`.\n4. When the `text_width` would be exceeded, start a new line.\n5. Return the wrapped text.\n\n## Writing the Function:\n\n```julia\nfunction wrap_string(str::String, text_width::Int=10)\n    words = split(str)  # Split the string into words\n    current_line = \"\"\n    wrapped_text = \"\"\n    \n    for word in words\n        if length(current_line) + length(word) + 1 > text_width\n            wrapped_text *= current_line * \"\\n\"\n            current_line = word\n        else\n            if current_line != \"\"\n                current_line *= \" \"\n            end\n            current_line *= word\n        end\n    end\n    \n    # Add last line if it's not empty\n    if current_line != \"\"\n        wrapped_text *= current_line\n    end\n        \n    return wrapped_text\nend\n```\n\n## Example:\n\n```julia\n# Given example\ntext = \"This function will wrap words into lines\"\nwrapped_text = wrap_string(text)\nprintln(wrapped_text)\n```\n\nThis function will iterate over each word in the input string and wrap the text based on the specified `text_width`, adding a newline where appropriate to avoid exceeding the maximum width.","status":200,"tokens":[162,294],"elapsed":25.150026708,"_type":"aimessage"}]