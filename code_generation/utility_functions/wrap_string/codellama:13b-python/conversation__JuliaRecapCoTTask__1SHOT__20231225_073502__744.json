[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"# Tests:\n\n```julia\nusing Test; @testset \"Tests\" begin\n    @test wrap_string(\"\") == \"\"\n    @test wrap_string(\"a\") == \"a\"\n    @test wrap_string(\"12345\") == \"12345\\n\"\n    @test wrap_string(\"12 34\") == \"12 34\\n\"\n    @test wrap_string(\"Hello World!\") == \"Hello Worl\\nd!\"\n    @test wrap_string(\"HelloWorld\") == \"HelloWorl\\nd\"\n    @test wrap_string(\"Hello 1 World 2 !\") == \"Hello \\n1 Wo\\nrd \\n2 !\"\n    @test wrap_string(\"Hello World!\", text_width=5) == \"Hel\\nl\\nlo \\nWo\\nrld\\n!\\n\"\nend;\n```","status":200,"tokens":[65,210],"elapsed":13.329842167,"_type":"aimessage"}]