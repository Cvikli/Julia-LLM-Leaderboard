[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"function extract_julia_code(md::AbstractString)\n    code_blocks = Vector{AbstractString}()\n    lines = split(md, '\\n')\n    for line in lines\n        if startswith(line, \"```Julia\") && isempty(code_blocks)\n            start_index = findfirst(isequal('`'), line)+3\n            end_index = findlast(isequal('`'), line)+1\n            append!(code_blocks, line[start_index:end_index]) \n        elseif isempty(line) == false && code_blocks !== nothing\n            append!(code_blocks, '\\n') \n            append!(code_blocks, line)\n    end\n    return join(code_blocks)\nend","status":200,"tokens":[0,178],"elapsed":1.354321146,"_type":"aimessage"}]