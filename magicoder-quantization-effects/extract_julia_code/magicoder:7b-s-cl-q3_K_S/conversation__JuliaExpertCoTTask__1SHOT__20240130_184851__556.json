[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here is the function `extract_julia_code` in Julia:\n\n```julia\nfunction extract_julia_code(md::String)\n    # Split markdown string into blocks based on fenced code blocks.\n    # The pattern matches a start or end of a fenced block by looking for three backticks followed by any amount of whitespace then the language indicator (optional).\n    blocks = split(md, r\"(?=```\\n)\"; keepempty=false) \n    code_blocks = [block[4:end] for block in blocks if startswith(block, \"```julia\") && endswith(block, \"```\")]\n\n    # Join all the code blocks together with a newline.\n    code = join([code_block for code_block in code_blocks], \"\\n\");\n\n    return code;\nend\n```\nThis function splits the markdown string into separate code blocks based on fenced code blocks, then selects only those where the language indicator is \"julia\". After that it joins all these selected blocks together with a newline.","status":200,"tokens":[0,244],"elapsed":1.929169382,"_type":"aimessage"}]