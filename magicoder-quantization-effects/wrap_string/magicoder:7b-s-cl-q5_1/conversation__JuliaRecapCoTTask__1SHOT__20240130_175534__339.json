[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Here is an implementation of the function:\n```julia\nfunction wrap_string(words, text_width::Int=10)\n    res = \"\"\n    line_length = 0\n    for word in words\n        if length(word) > text_width - line_length\n            res *= \"\\n\"\n            line_length = 0\n        end\n        res *= \" $word\"\n        line_length += length(word) + 1\n    end\n    return strip(res)\nend\n```\nYou can call this function with a list of words like this:\n```julia\nwords = [\"This\", \"is\", \"a\", \"test\"]\n@show wrap_string(words)\n```\nIf you want to set the text width, you can do that in the function call like this:\n```julia\n@show wrap_string(words, 5)\n```\n\nPlease replace {{instructions}} with actual instructions if they are different. If not, feel free to remove these lines from your code.","status":200,"tokens":[0,235],"elapsed":2.148079629,"_type":"aimessage"}]