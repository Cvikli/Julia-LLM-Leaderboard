[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here is the Julia code to solve this problem:\n\n```julia\nfunction wrap_string(s, text_width::Int=10)\n    words = split(s, ' ')  # Split string into array of words\n    result = \"\"\n    for word in words\n        if length(word) > text_width\n            println(result * word)\n            result = \"\"\n        elseif length(result) + length(word) > text_width\n            println(result * \"\\n\" * word)  # New line and start a new string\n            result = \"\"\n        else\n            result *= \" \" * word  # Add space and the word to the current string\n        end\n    end\nend\n```\nYou can test this function with your example:\n\n```julia\nwrap_string(\"This function will wrap words into lines\")\n```","status":200,"tokens":[0,194],"elapsed":1.498783878,"_type":"aimessage"}]