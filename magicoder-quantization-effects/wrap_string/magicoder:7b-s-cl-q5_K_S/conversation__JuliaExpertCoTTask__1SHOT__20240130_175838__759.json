[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here's how you can solve this problem using Julia:\n\n```julia\nfunction wrap_string(input::String, text_width::Int=10) \n    # Split the input string into an array of words\n    words = split(input)\n    \n    # Initialize a variable to track the total width of the output string\n    total_width = 0\n    \n    # Initialize an empty list to store lines\n    lines = String[]\n    \n    line = \"\"\n    \n    for word in words\n        # Calculate the length of the current word plus the spaces needed for next word\n        new_line_length = total_width + (total_width > 0 ? 1 : 0) + length(word)\n        \n        if new_line_length <= text_width\n            line *= \" \" * word\n            total_width += length(word)\n        else\n            push!(lines, line)\n            \n            # Reset the line and update total width\n            line = word\n            total_width = length(word)\n        end\n    end\n    \n    # Push the final line to lines\n    push!(lines, line)\n    \n    return join(lines, \"\\n\")\nend\n```\n\nYou can test it with:\n\n```julia\nprintln(wrap_string(\"This function will wrap words into lines\", 10))\n```","status":200,"tokens":[0,315],"elapsed":2.70471205,"_type":"aimessage"}]