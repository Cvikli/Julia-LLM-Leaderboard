[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `timezone_bumper(dt,bump)` that increases any provided timestamp by `bump::Int` hours (defaults to +3 hours). Make sure it works only for DateTime types and throws an error for Date types.\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Here is a solution in Julia that takes into account the special instructions:\n```julia\nusing Dates\n\n\"\"\"\n    timezone_bumper(dt::DateTime, bump::Int=3)\n\nIncrease any provided timestamp by `bump` hours (defaults to +3).\n\n# Example\n\n# The following example increases a DateTime object \"2018-01-01T00:00:00\" with 5 hours.\njulia> timezone_bumper(DateTime(\"2018-01-01T00:00:00\"), 5)\n2018-01-01T05:00:00\n\"\"\"\nfunction timezone_bumper(dt::DateTime, bump::Int=3)\n    return dt + Second(Hour(bump))\nend\n\n# Throw an error if Date is provided\nfunction timezone_bumper(d::Date)\n    throw(ArgumentError(\"Input must be of DateTime type.\"))\nend\n``` \nPlease replace {{instructions}} with specific instructions or delete this line. If you need any further help, kindly let me know!","status":200,"tokens":[0,268],"elapsed":2.197111306,"_type":"aimessage"}]