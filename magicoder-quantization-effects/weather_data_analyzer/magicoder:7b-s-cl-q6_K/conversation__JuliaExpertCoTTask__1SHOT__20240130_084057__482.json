[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"Here is how you can solve this task:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if length(temps) == 0\n        return (; average = nothing, max = nothing, min = nothing, trend = nothing)\n    end\n    avg_temp = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n    trend_symbol = check_trend(temps)\n    return (; average=avg_temp, max=max_temp, min=min_temp, trend=trend_symbol)\nend\n\nfunction check_trend(temps)\n    diffs = diff(temps)  # calculate differences between consecutive temperatures\n    if all(diff .>=0)\n        return :increasing\n    elseif all(diff .<=0)\n        return :decreasing\n    else\n        return :stable\n    end\nend\n```\nThis `weather_data_analyzer` function first checks whether the provided data is empty. If it's not, it calculates the mean (average), maximum and minimum temperatures, and the trend of the temperature series. The `check_trend` helper function computes the trend based on differences between consecutive temperatures.","status":200,"tokens":[0,295],"elapsed":2.910555392,"_type":"aimessage"}]