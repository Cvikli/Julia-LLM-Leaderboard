[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"Here's a Python code solution for your problem:\n\n```python\nimport statistics as stats\nfrom typing import NamedTuple\n\ndef weather_data_analyzer(temps):\n    if not temps:\n        return (None, None, None, None)  # Returning None for all values since list is empty.\n    else:\n        avg = stats.mean(temps)\n        max_temp = max(temps)\n        min_temp = min(temps)\n        \n        trend = \":increasing\" if max_temp > min_temp else (\":decreasing\" if max_temp < min_temp else \":stable\") \n    \n    return NamedTuple(\"Data\", [('average', float), ('max', int), ('min', int), ('trend', str)])(avg, max_temp, min_temp, trend)\n```\nThis function works by first checking if the list `temps` is empty. If it is, then the function returns a tuple with all values set to None. Otherwise, the function calculates the mean (average), maximum and minimum temperatures from the provided data using Python's built-in statistics library. It then determines the trend based on the difference between the max temperature and min temperature. \n\nFinally, it constructs a named tuple with these values and returns it.","status":200,"tokens":[0,302],"elapsed":2.36711417,"_type":"aimessage"}]