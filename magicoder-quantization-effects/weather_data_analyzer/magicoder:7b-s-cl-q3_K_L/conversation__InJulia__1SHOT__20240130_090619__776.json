[{"content":"Act as a helpful AI assistant","variables":[],"_type":"systemmessage"},{"content":"In Julia, You are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.","variables":[],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average=nothing, max=nothing, min=nothing, trend=nothing)\n    else\n        average = mean(temps)\n        maxTemp = maximum(temps)\n        minTemp = minimum(temps)\n        \n        if average > maxTemp\n            trend = :decreasing\n        elseif average < minTemp\n            trend = :increasing\n        else\n            trend = :stable\n        end\n\n        return (average=average, max=maxTemp, min=minTemp, trend=trend)\n    end\nend\n```\nThis function first checks if the input array is empty. If it's not, it computes the mean, maximum and minimum values of the temperature list. It then compares these statistics to determine whether the trend is increasing, decreasing or stable (i.e., the average has not changed). \n\nThe function returns a named tuple with all the computed values if the input array is non-empty. If it's empty, the function instead returns a named tuple with `nothing` for each value.","status":200,"tokens":[0,268],"elapsed":2.149657805,"_type":"aimessage"}]