[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average=nothing, max=nothing, min=nothing, trend=nothing)\n    else\n        average = mean(temps)\n        maxTemp = maximum(temps)\n        minTemp = minimum(temps)\n        \n        # Determine trend \n        if maximum(temps[1:2]) > temps[3]\n            trend = :decreasing\n        elseif minimum(temps[1:2]) < temps[3]\n            trend = :increasing\n        else\n            trend = :stable\n        end\n        \n        return (average=average, max=maxTemp, min=minTemp, trend=trend)\n    end\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22])\n```\n\nIn this code snippet, we first check if the `temps` list is empty. If it's empty, we return a named tuple with all values set to nothing. Otherwise, we calculate the average, maximum and minimum temperatures using the built-in functions from the Statistics package in Julia. We also determine the trend based on whether the temperature at index 3 is higher or lower than the maximum or minimum temperature of the first two elements respectively (indicating an increasing or decreasing trend). The resultant named tuple is then returned by the function.","status":200,"tokens":[0,335],"elapsed":2.920530568,"_type":"aimessage"}]