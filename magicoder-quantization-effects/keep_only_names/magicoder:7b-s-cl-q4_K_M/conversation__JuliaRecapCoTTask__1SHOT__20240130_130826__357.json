[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `keep_only_names` which iterates over the provided list of words (`words`) and removes all words that do not start with a capital letter (eg, remove \"dog\" but keep \"Dog\").\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Here is a simple solution written in Julia programming language:\n\n```julia\nfunction keep_only_names(words)\n    filter!(word -> startswith(word, uppercase(first(word))), words)\nend\n```\nIn the above function, `startswith` checks if the first character of a word matches with the uppercased version of that character. `uppercase(first(word))` gets the first character of the word and converts it to uppercase. \n\nThe `filter!` function applies this condition to each element in the list and removes elements for which the condition is false. The exclamation mark (!) after `filter!` indicates that it modifies the original list.\n\nPlease replace `\"{{instructions}}\"` with your specific instructions if any.","status":200,"tokens":[0,171],"elapsed":1.398882135,"_type":"aimessage"}]