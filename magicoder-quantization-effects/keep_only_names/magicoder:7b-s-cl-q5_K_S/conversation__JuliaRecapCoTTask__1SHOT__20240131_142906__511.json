[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `keep_only_names` which iterates over the provided list of words (`words`) and removes all words that do not start with a capital letter (eg, remove \"dog\" but keep \"Dog\").\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Here is a simple function in Julia to solve this problem:\n\n```julia\nfunction keep_only_names(words)\n    return [word for word in words if isupper(first(word))]\nend\n```\n\nThis function uses list comprehension and the built-in `isupper` function in Julia, which checks whether a character is an uppercase letter. The `first` function returns the first character of the string. It iterates over all words in the provided list and only keeps those that start with an uppercase letter.\n\nIf you want to use your own instructions, replace {{instructions}} with whatever you need. For example, if you wanted to add a specific rule that excludes words containing a certain character, you could modify this function like so:\n\n```julia\nfunction keep_only_names(words)\n    return [word for word in words if isupper(first(word)) && !contains(word, 'e')]\nend\n```\n\nIn this case, it would only include words that start with an uppercase letter and do not contain the letter \"e\".","status":200,"tokens":[0,241],"elapsed":2.085822084,"_type":"aimessage"}]