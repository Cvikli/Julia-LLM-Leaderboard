[{"content":"Act as a helpful AI assistant","variables":[],"_type":"systemmessage"},{"content":"In Julia, You are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.","variables":[],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (; average=nothing, max=nothing, min=nothing, trend=nothing)\n    end\n    average = mean(temps)\n    max = maximum(temps)\n    min = minimum(temps)\n    trend = nothing\n    if all(x -> x > 0, temps)\n        trend = :increasing\n    elseif all(x -> x < 0, temps)\n        trend = :decreasing\n    elseif any(x -> x == 0, temps)\n        trend = :stable\n    end\n    return (; average=average, max=max, min=min, trend=trend)\nend\n```\n\nThis function first checks if the list is empty and returns a named tuple with all values set to `nothing` in that case. If the list is not empty, it calculates the average, maximum, minimum, and trend of the temperatures using the `Statistics` package. The trend is determined by checking if all temperatures are positive, negative, or zero. The function then returns a named tuple containing the calculated values.","status":200,"tokens":[0,275],"elapsed":2.289995727,"_type":"aimessage"}]