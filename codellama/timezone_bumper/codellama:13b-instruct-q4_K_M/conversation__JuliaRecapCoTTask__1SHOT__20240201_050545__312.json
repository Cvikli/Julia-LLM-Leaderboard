[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `timezone_bumper(dt,bump)` that increases any provided timestamp by `bump::Int` hours (defaults to +3 hours). Make sure it works only for DateTime types and throws an error for Date types.\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\nfunction timezone_bumper(dt, bump=3)\n    if !(dt isa DateTime) || dt isa Date\n        throw(\"timezone_bumper only works for DateTime types\")\n    end\n    return dt + Dates.Hour(bump)\nend\n```\nThis function takes in a `DateTime` or `Date` object as the first argument, and an optional integer argument `bump`. If no bump value is provided, it defaults to 3 hours. The function then checks if the input is a valid `DateTime` type by using the `isa` keyword, and throws an error if it's not. Finally, it returns the original date-time object with the specified number of hours added to it.\n\nHere are some examples of how this function can be used:\n```julia\njulia> dt = DateTime(2023, 1, 1)\nDateTime(\"2023-01-01T00:00:00\")\n\njulia> timezone_bumper(dt)\nDateTime(\"2023-01-01T03:00:00\")\n\njulia> dt = DateTime(2023, 1, 1, 12)\nDateTime(\"2023-01-01T12:00:00\")\n\njulia> timezone_bumper(dt, 4)\nDateTime(\"2023-01-01T16:00:00\")\n```","status":200,"tokens":[0,352],"elapsed":4.830006128,"_type":"aimessage"}]