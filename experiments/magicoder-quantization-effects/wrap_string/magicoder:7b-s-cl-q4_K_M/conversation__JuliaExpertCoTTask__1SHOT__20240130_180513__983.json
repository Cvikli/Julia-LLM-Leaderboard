[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here is the code you asked for:\n```julia\nfunction wrap_string(input::String; text_width::Int=10)\n    words = split(input, ' ')\n    output = \"\"\n    line = \"\"\n    for word in words\n        if length(line * \" $word\") > text_width  # check if adding a space and the next word exceeds width\n            output *= \"$line\\n\"                   # if so, add newline character\n            line = \"$word \"                       # start new line with this word\n        else\n            line *= \"$word \"                      # otherwise just add space and the next word\n        end\n    end\n    return output * \"$line\"                          # finally, append the remaining line to output\nend\n```\nThis function splits the input string into words. Then it iterates over each word in a loop. It checks if adding the current word to the existing line will exceed the `text_width`. If so, it appends a newline character and starts a new line with this word. Otherwise, it adds space and the next word to the end of the line. Finally, it returns the final output string which contains all lines of words wrapped according to the `text_width`. \n\nExample:\n```julia\nprint(wrap_string(\"This function will wrap words into lines\"))\n```\nThis code prints out each word in a new line if adding the next word to the current line would exceed the given width (default is 10), otherwise it adds space and continues with the current line.","status":200,"tokens":[0,342],"elapsed":2.76258116,"_type":"aimessage"}]