[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(s::String, text_width::Int=10) \n    words = split(s, \" \")\n    current_line = \"\"\n    result = \"\"\n    \n    for word in words\n        if length(current_line * \" $word\") > text_width \n            result *= \"$(current_line)\\n\"\n            current_line = \"\"\n        end\n        current_line *= \" $word\"\n    end\n  \n    return result * current_line\nend\n```\nThis is how you can use it:\n\n```julia\nprintln(wrap_string(\"This function will wrap words into lines\", 15))\n```\nThe above code splits the input string into words and adds each word to a line until the length of the line exceeds `text_width`. If a new line would be too long, it starts a new line. At the end, it concatenates any remaining line with a newline character. The result is printed out.","status":200,"tokens":[0,227],"elapsed":1.846667596,"_type":"aimessage"}]