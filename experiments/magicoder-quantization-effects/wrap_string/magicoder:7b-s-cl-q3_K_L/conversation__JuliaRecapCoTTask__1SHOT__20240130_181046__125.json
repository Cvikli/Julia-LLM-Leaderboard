[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Sure, the problem is to wrap the text based on a maximum width. Here is the solution:\n```julia\nfunction wrap_string(text::String; text_width::Int=10)\n    words = split(text, \" \")\n    lines = String[]\n    \n    current_line = \"\"\n    for word in words\n        if length(current_line * \" \" * word) > text_width\n            push!(lines, current_line)\n            current_line = \"\"\n        end\n        \n        current_line *= word * \" \"\n    end\n    \n    # add the last line\n    push!(lines, current_line)\n    return join(lines, \"\\n\")\nend\n\n# example usage:\nprint(wrap_string(\"Lorem ipsum dolor sit amet consectetur adipiscing elit\"))\n```\nThis function iterates over each word in the input text and appends it to the current line. Whenever the length of the current line plus a space plus the next word exceeds `text_width`, the current line is added to the list of lines, and a new line is started. At the end, the last line is also added to the list of lines.\n\nPlease replace `\"Lorem ipsum dolor sit amet consectetur adipiscing elit\"` with your own text or string.","status":200,"tokens":[11,299],"elapsed":2.466611754,"_type":"aimessage"}]