[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here is the Julia code that solves this problem:\n\n```julia\nfunction wrap_string(s, text_width::Int=10)\n    words = split(s)\n    result = String[]\n    line = \"\"\n\n    for word in words\n        if length(line * \" \" * word) > text_width\n            push!(result, line)\n            line = \"\"\n        end\n        line *= \" \" * word\n    end\n\n    push!(result, line) # add the remaining line after the loop\n    \n    return join(result, \"\\n\")\nend\n```\nHere is an example of how you could use this function:\n```julia\nprint(wrap_string(\"This function will wrap words into lines\", 20))\n```","status":200,"tokens":[0,176],"elapsed":1.378654089,"_type":"aimessage"}]