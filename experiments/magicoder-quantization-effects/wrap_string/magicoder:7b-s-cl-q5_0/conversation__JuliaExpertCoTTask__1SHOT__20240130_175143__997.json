[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here's a way you can accomplish this:\n\n```julia\nfunction wrap_string(text, text_width::Int=10)\n    words = split(text)\n    line = \"\"\n    for word in words\n        if length(line * \" \" * word) > text_width  # checking the combined length of current line and next word\n            println(line)\n            line = \"\"\n        end\n        line *= \" \" * word\n    end\n    println(line)  # print remaining string at the end.\nend\n```\n\nYou can use your function like this:\n\n```julia\nwrap_string(\"This function will wrap words into lines\")\n```\n\nAnd it will output each word of the sentence on a new line, when the width of a line is exceeded by adding the next word.","status":200,"tokens":[0,188],"elapsed":1.629668868,"_type":"aimessage"}]