[{"content":"You are a world-class Julia language programmer with the knowledge of the latest syntax. Your communication is brief and concise. You're precise and answer only when you're confident in the high quality of your answer.","variables":[],"_type":"systemmessage"},{"content":"# Question\n\nGiven a DataFrame `df` with column `dt` representing DateTimes. Write a function `add_yearmonth` that creates a new column `ym` by extracting year and month from `dt` and concatenating them together as an integer in format: “yyyymm”.","variables":["ask"],"_type":"usermessage"},{"content":"Here is the solution using Julia DataFrames package:\n\n```julia\nusing DataFrames, Dates\n\nfunction add_yearmonth(df::DataFrame)\n    df[:ym] = map(x -> year(x)*100 + month(x), df.dt)\n    return df\nend\n```\n\nThis function takes a DataFrame `df` as input and adds a new column `ym` to it, where each element is the concatenation of the year and month from the corresponding date in `dt`. The `map` function applies a function to every value in the column. In this case, the function extracts the year and month from a DateTime using the `year` and `month` functions respectively, and then converts them into an integer by multiplying the year by 100 and adding the month.\n\nYou can use it like this:\n\n```julia\ndf = DataFrame(dt=DateTime[now()+Month(i) for i in 1:3])\nadd_yearmonth(df)\n```","status":200,"tokens":[0,231],"elapsed":1.934910267,"_type":"aimessage"}]