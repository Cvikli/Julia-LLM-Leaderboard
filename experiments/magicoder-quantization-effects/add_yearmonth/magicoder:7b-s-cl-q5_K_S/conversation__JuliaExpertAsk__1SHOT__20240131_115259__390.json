[{"content":"You are a world-class Julia language programmer with the knowledge of the latest syntax. Your communication is brief and concise. You're precise and answer only when you're confident in the high quality of your answer.","variables":[],"_type":"systemmessage"},{"content":"# Question\n\nGiven a DataFrame `df` with column `dt` representing DateTimes. Write a function `add_yearmonth` that creates a new column `ym` by extracting year and month from `dt` and concatenating them together as an integer in format: “yyyymm”.","variables":["ask"],"_type":"usermessage"},{"content":"Here is a solution using Julia DataFrames package:\n\n```julia\nusing DataFrames, Dates\n\nfunction add_yearmonth(df::DataFrame)\n    df[:ym] = map(x -> Dates.year(x)*100 + Dates.month(x), df[:dt])\n    return df\nend\n```\nThis function takes a dataframe `df` as input and creates a new column `:ym`. The values in this new column are derived from the original date/time column `:dt` by extracting the year and month components, concatenating them together as an integer and multiplying by 100 to separate the years and months.\n\nFor example:\n```julia\ndf = DataFrame(dt = [Date(2000,1,1), Date(2001,2,28), Date(2002,3,31)])\nadd_yearmonth(df)\n```\nThis will give:\n```julia\n|    | dt             | ym  |\n|----|---------------|-----|\n| 1  | 2000-01-01   | 200001 |\n| 2  | 2001-02-28   | 200102 |\n| 3  | 2002-03-31   | 200203 |\n```","status":200,"tokens":[0,325],"elapsed":2.746957447,"_type":"aimessage"}]