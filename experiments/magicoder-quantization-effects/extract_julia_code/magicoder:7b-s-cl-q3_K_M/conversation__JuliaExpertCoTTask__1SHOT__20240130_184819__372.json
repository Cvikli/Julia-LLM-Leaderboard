[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction extract_julia_code(md::String)\n    code_blocks = String[]\n    for line in split(md, '\\n')\n        if startswith(line, \"```julia\")  # start of a julia block\n            codes = String[]\n            while !startswith(line, \"```\") push!(codes, strip(line[7:end])) end  # collect code blocks\n            join_code = join(codes, \"\\n\")\n            push!(code_blocks, join_code)\n        end\n    end\n    return join(code_blocks, \"\\n\\n\")  # join code blocks with double newline\nend\n```\nThis function first splits the input `md` string by line breaks to get each line. Then it iterates over each line. If a line starts with ```julia then it collects all subsequent lines (within that block) as Julia code into `codes`. After the end of the block, `join_code` is used to concatenate the collected lines with newline separator and pushes it onto `code_blocks`. Finally, after iterating over all lines, it joins all blocks with double newline separators to return a single string. \n\nYou can call this function using your data:\n```julia\nprintln(extract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\"))\n```","status":200,"tokens":[0,318],"elapsed":2.463432187,"_type":"aimessage"}]