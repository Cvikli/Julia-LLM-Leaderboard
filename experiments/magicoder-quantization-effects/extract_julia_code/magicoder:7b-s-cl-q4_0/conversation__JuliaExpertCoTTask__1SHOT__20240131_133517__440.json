[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"Here is an implementation of `extract_julia_code` function in Julia:\n\n```julia\nfunction extract_julia_code(md)\n    code_blocks = split(md, \"```julia\\n\", keepempty=false)\n    code_blocks = [replace(code_block, \"\\n```\" => \"\") for code_block in code_blocks]\n    return join(code_blocks, \"\\n\")\nend\n```\n\nThis function works by splitting the markdown `md` string using \"```julia\\n\" as separator (keepempty=false to discard empty strings at start/end of md), then it replaces each code block's end with an empty string and joins them all together. The result is a single string containing all the Julia code blocks from `md` joined by newline characters.\n\nFor example, if you call:\n```julia\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")\n```\nThe output will be:\n```julia\nprintln(\"hello world\")\n```","status":200,"tokens":[0,251],"elapsed":1.889091428,"_type":"aimessage"}]