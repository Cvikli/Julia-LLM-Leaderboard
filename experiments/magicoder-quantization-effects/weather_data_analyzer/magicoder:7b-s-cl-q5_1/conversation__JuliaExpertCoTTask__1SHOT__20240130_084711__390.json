[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"Here's a Julia solution using the Statistics package:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average=nothing, max=nothing, min=nothing, trend=nothing)\n    else\n        average = mean(temps)\n        max_temp = maximum(temps)\n        min_temp = minimum(temps)\n        trend = temps[1] < temps[2] ? :increasing : (temps[1] > temps[2] ? :decreasing : :stable)\n        \n        return (average=average, max=max_temp, min=min_temp, trend=trend)\n    end\nend\n```\n\nIn this function:\n- If the list is empty it returns a named tuple with all values set to `nothing`.\n- Otherwise, it calculates the mean (average), maximum and minimum temperatures.\n- The `trend` is determined by checking if the first two elements in the list have different signs. If they do, then the trend is either `:increasing`, `:decreasing`, or `:stable` based on whether the first element is smaller than the second.","status":200,"tokens":[0,274],"elapsed":2.484364506,"_type":"aimessage"}]