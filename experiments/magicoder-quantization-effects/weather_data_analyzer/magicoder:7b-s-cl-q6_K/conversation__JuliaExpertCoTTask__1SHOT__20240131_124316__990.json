[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"You can solve this problem by using Julia's built-in functions and packages. Here is a sample solution:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average=nothing, max=nothing, min=nothing, trend=nothing)\n    end\n    \n    average = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n\n    if max_temp == min_temp\n        trend = :stable\n    elseif max_temp > min_temp\n        trend = :increasing\n    else\n        trend = :decreasing\n    end\n    \n    return (average=average, max=max_temp, min=min_temp, trend=trend)\nend\n```\nThis function first checks if the list is empty. If it is, it returns a named tuple with all values set to `nothing`. \n\nIf the list is not empty, it calculates the average temperature using the `mean` function from the `Statistics` package, and finds the maximum and minimum temperatures using the `maximum` and `minimum` functions. It then checks if the max and min temps are equal to determine the trend (if they're equal, it's \"stable\"; if the max is greater than the min, it's \"increasing\"; otherwise, it's \"decreasing\"). \n\nFinally, it returns a named tuple with the calculated average, maximum, minimum, and trend.","status":200,"tokens":[0,354],"elapsed":3.438026241,"_type":"aimessage"}]