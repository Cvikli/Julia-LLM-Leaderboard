[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"Here's how you would write this function in Julia:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (; average=nothing, max=nothing, min=nothing, trend=nothing)\n    end\n    \n    avg = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n    \n    if length(temps) < 2\n        return (; average=avg, max=max_temp, min=min_temp, trend=nothing)\n    end\n    \n    first_diff = temps[2] - temps[1]\n    for i in 3:length(temps)\n        if (temps[i] - temps[i-1]) != first_diff\n            return (; average=avg, max=max_temp, min=min_temp, trend=:stable)\n        end\n    end\n    \n    first_diff > 0 ? (; average=avg, max=max_temp, min=min_temp, trend=:increasing) : (; average=avg, max=max_temp, min=min_temp, trend=:decreasing)\nend\n```\nThe function first checks if the input list is empty or contains only one element. If it's so, it returns a named tuple with all values set to `nothing`. \n\nIf the list has at least two elements, the function calculates average and maximum/minimum temperatures. It then compares the difference between consecutive days in the list. If there is any difference, it means that the temperature trend is not stable (it's either increasing or decreasing). If there isn't a difference, it returns the trend as `:stable`. \n\nFinally, if the data is valid and the temperature trend is either `:increasing` or `:decreasing`, the function constructs and returns the named tuple with corresponding values.","status":200,"tokens":[0,451],"elapsed":4.495521683,"_type":"aimessage"}]