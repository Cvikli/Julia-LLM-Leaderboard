[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"function extract_julia_code(md::String)\n    lines = split(md, \"\\n\")\n    output = String[]\n    in_fence = false\n    current_block = String[]\n\n    for line in lines\n        if in_fence && !occursin(\"```\", line)\n            # Remove leading whitespace and add to output\n            line = strip(line)\n            push!(output, line)\n        end\n\n        if occursin(\"```julia\", line)\n            in_fence = true\n        elseif in_fence && occursin(\"```\", line)\n            in_fence = false\n            # Join the current block with a newline if there's content\n            current_block = join(current_block, \"\\n\")\n            push!(output, current_block)\n            current_block = String[]\n        end\n\n        if in_fence && !occursin(\"```\", line)\n            # Add to the current block without modifications\n            push!(current_block, strip(line))\n        end\n    end\n\n    return join(output, \"\\n\")\nend","status":200,"tokens":[0,275],"elapsed":7.05496337,"_type":"aimessage"}]