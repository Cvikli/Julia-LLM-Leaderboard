[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"function extract_julia_code(md::AbstractString)\n    lines = split(md, \"\\n\")\n    julia_blocks = []\n\n    # Find all code blocks that start with `julia`\n    for (i, line) in enumerate(lines)\n        if startswith(line, \"```julia\")\n            start_idx = i\n            while true\n                i += 1\n                if endswith(lines[i], \"```\")\n                    end_idx = i\n                    break\n                end\n            end\n            # Remove the code fences\n            code_block = join(lines[start_idx+1:end_idx-1])\n            # Join the lines of the code block with newline\n            push!(julia_blocks, replace(code_block, r\"^\\s*```julia\\n|\\s*```\\n?$\" => \"\"))\n        end\n    end\n\n    return join(julia_blocks, \"\\n\")\nend\n\n# Example usage\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\") # Output: println(\"hello world\")","status":200,"tokens":[220,277],"elapsed":15.872576026,"_type":"aimessage"}]