[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average=nothing, max=nothing, min=nothing, trend=nothing)\n    end\n\n    mean_temp = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n\n    # Calculate temperature trend using the method of least squares\n    x = 1:length(temps)\n    y = temps\n    coef, res, _, _ = polyfit(x, y, 1)\n    slope = coef[1]\n    intercept = coef[2]\n\n    if slope > 0.005 && slope < -0.005 # Arbitrary threshold for increasing/decreasing trend\n        trend = :stable\n    elseif slope > 0\n        trend = :increasing\n    else\n        trend = :decreasing\n    end\n\n    return (average=mean_temp, max=max_temp, min=min_temp, trend=trend)\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22])  # Example usage\n```\n\nThis code defines a function `weather_data_analyzer` that calculates the average, maximum, and minimum temperatures from a list of daily temperature data. It also determines the trend in the temperature data using the method of least squares to fit a linear model and then classifies the trend as increasing, decreasing, or stable based on the slope of the fitted line. The function returns a named tuple with the calculated values.","status":200,"tokens":[0,371],"elapsed":11.891607325,"_type":"aimessage"}]