[{"content":"Act as a helpful AI assistant","variables":[],"_type":"systemmessage"},{"content":"In Julia, You are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.","variables":[],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average = nothing, max = nothing, min = nothing, trend = nothing)\n    end\n\n    mean_temp = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n    diffs = [x[1] - x[2] for x in pairwise(temps)]\n    trend = diffs |> sum |> sign |> (x -> x == 0 ? :stable : (x > 0 ? :increasing : :decreasing))\n\n    return (average=mean_temp, max=max_temp, min=min_temp, trend=trend)\nend\n```\n\nThis function uses the `Statistics` package to calculate the average (`mean()`), maximum (`maximum()`), and minimum (`minimum()`) temperatures. To determine the trend, it calculates the differences between each pair of consecutive temperatures using `pairwise()` and then sums these differences. The sign of this sum is used to determine whether the temperature trend is increasing, decreasing, or stable. If the list is empty, the function returns a named tuple with all values set to `nothing` as specified.","status":200,"tokens":[0,283],"elapsed":9.219891725,"_type":"aimessage"}]