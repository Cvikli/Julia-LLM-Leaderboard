[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps::Vector{T}) where {T<:Number}\n    if isempty(temps)\n        return (average = nothing, max = nothing, min = nothing, trend = nothing)\n    end\n\n    mean_temp = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n    std_dev = std(temps)\n    median_temp = median(temps)\n\n    # Calculate trend using standard deviation and mean as a proxy for now\n    if std_dev == 0\n        trend = :stable  # No variation, so no trend\n    elseif (mean_temp - min_temp) / std_dev >= 1.96 || (max_temp - mean_temp) / std_dev >= 1.96\n        trend = :increasing  # Mean is significantly higher than min or max\n    elseif (mean_temp - min_temp) / std_dev <= -1.96 || (mean_temp - max_temp) / std_dev <= -1.96\n        trend = :decreasing  # Mean is significantly lower than min or max\n    else\n        trend = :stable  # No significant trend\n    end\n\n    return (average=mean_temp, max=max_temp, min=min_temp, trend=trend)\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22])  # Example usage\n```\n\nPlease note that the `trend` is determined based on a simple heuristic using the mean and standard deviation as a proxy for now. In practice, more sophisticated methods like linear regression or moving averages might be used to determine temperature trends. Also, the choice of 1.96 as a threshold is based on the empirical rule (68-95-99.7 rule) for two standard deviations, which indicates that there's a 95% chance that the mean lies within two standard deviations of the median. This is used to decide whether the temperature series is significantly increasing or decreasing.","status":200,"tokens":[0,482],"elapsed":37.568963837,"_type":"aimessage"}]