[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `timezone_bumper(dt,bump)` that increases any provided timestamp by `bump::Int` hours (defaults to +3 hours). Make sure it works only for DateTime types and throws an error for Date types.\n\n\n\n# Special Instructions\n\nNone.\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\nfunction timezone_bumper(dt::DateTime, bump::Integer=3)\n    if !(isa(bump, Integer)) || bump <= 0\n        throw(ArgumentError(\"`bump` must be a positive integer\"))\n    end\n\n    # Convert DateTime to Date and add bump hours\n    date_time = Date(dt) + Duration(bump, Unit=Hour)\n\n    # Convert back to DateTime\n    return DateTime(date_time)\nend\n```\n\nThis function checks that `bump` is a positive integer, converts the given `DateTime` to a `Date` and adds `bump` hours to it using `Duration`, then converts the result back to `DateTime`. It handles negative values of `bump` by throwing an error, and does not allow `bump` to be zero or less.","status":200,"tokens":[0,195],"elapsed":8.820578837,"_type":"aimessage"}]