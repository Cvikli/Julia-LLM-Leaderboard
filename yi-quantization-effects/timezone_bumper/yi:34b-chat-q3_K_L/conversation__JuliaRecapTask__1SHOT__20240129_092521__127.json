[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `timezone_bumper(dt,bump)` that increases any provided timestamp by `bump::Int` hours (defaults to +3 hours). Make sure it works only for DateTime types and throws an error for Date types.\n\n\n\n# Special Instructions\n\nNone.\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\nfunction timezone_bumper(dt::DateTime, bump::Int = 3)\n    if isa(bump, Integer) && bump >= 0\n        return DateTime(dt.year, dt.month, dt.day, dt.hour + bump, dt.minute, dt.second, dt.millisecond)\n    else\n        throw(ArgumentError(\"bump must be a non-negative integer, got $bump\"))\n    end\nend\n\n# Test cases\ntimezone_bumper(DateTime(2023, 1, 1, 12, 0, 0))  # Should return DateTime(2023, 1, 1, 15, 0, 0)\ntimezone_bumper(DateTime(2023, 1, 1, 12, 0, 0), -2)  # Should return DateTime(2023, 1, 1, 10, 0, 0)\ntimezone_bumper(Date(2023, 1, 1))  # Should throw an error\n```","status":200,"tokens":[386,258],"elapsed":12.423167589,"_type":"aimessage"}]