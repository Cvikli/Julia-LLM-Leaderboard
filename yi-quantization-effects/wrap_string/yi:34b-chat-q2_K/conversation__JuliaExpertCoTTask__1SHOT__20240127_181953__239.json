[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(str::AbstractString, text_width::Int = 10)\n    lines = Vector{String}()\n    words = collect(strsplit(str))\n    for word in words\n        if length(word) > text_width\n            push!(lines, word[1:text_width] * \"\\n\")\n            while true\n                word_end = findnext(r\"\\s\", word, text_width)[2] - 1\n                if word_end == 0\n                    break\n                else\n                    push!(lines, word[text_width + 1:end] * \" \")\n                end\n            end\n        else\n            push!(lines, word)\n        end\n    end\n    join(lines, ' ')\nend\n```\n\nExample usage:\n```julia\nwrap_string(\"This function will wrap words into lines\") # Output should be something like \"This function will\\nwrap words into lines\"\n```","status":200,"tokens":[0,232],"elapsed":5.946983484,"_type":"aimessage"}]