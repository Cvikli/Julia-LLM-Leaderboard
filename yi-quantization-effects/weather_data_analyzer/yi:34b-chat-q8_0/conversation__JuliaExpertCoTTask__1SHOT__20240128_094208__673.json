[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average = nothing, max = nothing, min = nothing, trend = nothing)\n    end\n\n    daily_stats = NamedTuple{(:average, :max, :min)}((\n        mean(temps),\n        maximum(temps),\n        minimum(temps),\n    ))\n\n    # Calculate the trend using the average of the first and last elements\n    trend = if daily_stats.average > temps[1] && daily_stats.average < temps[end]\n        :increasing\n    elseif daily_stats.average < temps[1] && daily_stats.average > temps[end]\n        :decreasing\n    else\n        :stable\n    end\n\n    return (; average=daily_stats.average, max=daily_stats.max, min=daily_stats.min, trend)\nend\n\n# Example usage\nweather_data_analyzer([25, 27, 23, 20, 22]) # Output: (average = 23.4, max = 27, min = 20, trend = :decreasing)\n```","status":200,"tokens":[0,284],"elapsed":12.814888524,"_type":"aimessage"}]