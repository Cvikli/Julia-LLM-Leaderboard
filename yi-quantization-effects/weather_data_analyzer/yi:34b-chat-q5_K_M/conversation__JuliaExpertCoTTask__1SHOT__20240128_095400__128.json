[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average = nothing, max = nothing, min = nothing, trend = nothing)\n    end\n\n    average = mean(temps)\n    max = maximum(temps)\n    min = minimum(temps)\n    trend = if average == 0 || abs(average - temps[1]) > 10\n        :decreasing\n    elseif average == max && min == temps[end]\n        :stable\n    else\n        :increasing\n    end\n\n    return (; average=average, max=max, min=min, trend=trend)\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22])  # Example usage\n```\n\nThis function follows the provided steps:\n\n1. Think through your approach step by step:\n   - Check if the list is empty. If so, return a named tuple with `nothing` for all values.\n   - Calculate the average, maximum, and minimum temperatures using `mean()`, `maximum()`, and `minimum()` from the `Statistics` package.\n   - Determine the trend based on whether the average is close to the first or last element of the list and if the difference between them is significant.\n\n2. Write any functions and other code you need:\n   - The `weather_data_analyzer` function is defined, which calculates the necessary statistics and returns a named tuple with the results.\n\n3. Solve the task:\n   - The function calculates the average, maximum, and minimum temperatures for the provided list of temperatures. It then decides on the trend based on a simple heuristic.\n\n4. Check that your solution is correct:\n   - Manually check the output against expected values for edge cases (empty list, lists with one element, etc.) and typical use cases to ensure the logic is sound.\n\nFor the provided example data, the function would return:\n\n```julia\n(average = 23.6, max = 27, min = 20, trend = :increasing)\n```","status":200,"tokens":[290,481],"elapsed":22.27103483,"_type":"aimessage"}]