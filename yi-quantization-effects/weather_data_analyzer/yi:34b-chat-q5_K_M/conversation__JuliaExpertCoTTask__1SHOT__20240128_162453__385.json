[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average = nothing, max = nothing, min = nothing, trend = nothing)\n    end\n\n    mean_temp = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n    is_increasing = all(temps[1] .<= temps)  # Check if list is strictly increasing\n    is_decreasing = all(temps .<= temps[end]) # Check if list is strictly decreasing\n    is_stable = (max_temp - min_temp < 2) && (!is_increasing && !is_decreasing)  # Check for stability\n\n    trend = ifelse(is_increasing, :increasing, ifelse(is_decreasing, :decreasing, :stable))\n\n    return (average=mean_temp, max=max_temp, min=min_temp, trend=trend)\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22])  # Example input\n```\n\nThis function uses the `Statistics` package to calculate the average and the maximum and minimum temperatures. It then checks if the temperature data shows a clear increasing, decreasing, or stable trend using logical operations on the list of temperatures. Finally, it returns a named tuple with the calculated values and the determined trend. If the input list is empty, it returns `nothing` for all fields in the named tuple.","status":200,"tokens":[0,350],"elapsed":11.497469319,"_type":"aimessage"}]