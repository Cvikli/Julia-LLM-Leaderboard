[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"function extract_julia_code(md::AbstractString)\n    # Regular expression to match Julia code blocks\n    re = r\"^\\s*```julia\\n((?:\\S+\\n)*)```\\s*$\"m\n\n    # Initialize the output string and a counter for newlines\n    out = \"\"\n    nl_counter = 0\n\n    # Loop through each match of the regular expression\n    for m in eachmatch(re, md)\n        # Get the content of the code block\n        content = m.captures[1]\n\n        # Remove leading and trailing whitespace from each line\n        lines = map(strip, split(content, \"\\n\"))\n\n        # If there are multiple code blocks, add a newline between them\n        if nl_counter > 0\n            out *= \"\\n\"\n        end\n\n        # Append the lines to the output string\n        out *= join(lines, \"\\n\")\n\n        # Increment the newline counter\n        nl_counter += 1\n    end\n\n    return out\nend\n\n# Example usage with provided data\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\") # Should return \"println(\\\"hello world\\\")\\n\"","status":200,"tokens":[0,296],"elapsed":23.002592874,"_type":"aimessage"}]