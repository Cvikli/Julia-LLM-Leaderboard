[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\nfunction extract_julia_code(md::String)::String\n    # Step 1: Use regex to find all code blocks with julia language identifier\n    julia_blocks = findall(r\"```julia\\n(.*?)\\n```\", md)\n\n    # Step 2: Remove the code fences and join the content of each block\n    code_lines = map(julia_blocks) do block\n        # Strip leading whitespace from each line to ensure uniform indentation\n        stripped_block = replace(block[1], r\"^(\\s*)\\n\" => s\"\\1\\n\")\n        # Remove the code fences and join lines with newlines\n        return stripped_block[2:end-1]\n    end\n\n    # Step 3: Join all the blocks together with a newline\n    joined_code = join(code_lines, \"\\n\")\n\n    # Step 4: Remove leading and trailing whitespace from the joined code\n    return replace(joined_code, r\"^\\s+|\\s+$\" => \"\")\nend\n```","status":200,"tokens":[0,256],"elapsed":19.96010639,"_type":"aimessage"}]