[{"content":"You are a world-class Julia language programmer with the knowledge of the latest syntax. Your communication is brief and concise. You're precise and answer only when you're confident in the high quality of your answer.","variables":[],"_type":"systemmessage"},{"content":"# Question\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.","variables":["ask"],"_type":"usermessage"},{"content":"```julia\nfunction extract_julia_code(md::AbstractString)\n    # Regular expression to match Julia code blocks in markdown\n    code_block_re = r\"^```julia[[:space:]]*(\\n|$)\"\n    end_of_code_block_re = r\"^```[[:space:]]*(\\n|$)\"\n\n    # Initialize an output string\n    output = \"\"\n\n    # Loop over each line in the markdown document\n    for line in split(md, '\\n')\n        # If the line starts with a code fence for Julia code block, add it to the output\n        if occursin(code_block_re, line)\n            push!(output, line)\n            # Append newlines until we find an end of code block\n            while !occursin(end_of_code_block_re, line)\n                line = next_non_empty_line(md, line + \"\\n\")\n                push!(output, line)\n            end\n        # If the line is not a code fence and we have some output, add a newline\n        elseif !isempty(output)\n            push!(output, '\\n')\n        end\n    end\n\n    # Remove leading/trailing whitespace from the output\n    return strip(output)\nend\n\nfunction next_non_empty_line(md::AbstractString, line::AbstractString)\n    while occursin(r\"^\\s*$\", line)\n        # If the current line is empty, move to the next one\n        if endswith('\\n', line)\n            line = md[findnext(r\"[\\n]\", line)[2]:end]\n        else\n            # If it's the last line without a newline, return an empty string\n            return \"\"\n        end\n    end\n    return line\nend\n```","status":200,"tokens":[0,433],"elapsed":19.482096871,"_type":"aimessage"}]