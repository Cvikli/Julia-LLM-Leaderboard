[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"function extract_julia_code(md::String)\n    lines = split(md, \"\\n\"; keepempty=false)\n    start_idx = findfirst(x -> x == \"```julia\", lines).start + 1 # skip the code fence\n    end_idx = findlast(x -> x == \"```\", lines)[2] - 1 # get the end index of the last code fence\n    code_blocks = join(lines[start_idx:end_idx], \"\\n\")  # join all code block lines\n    return replace(code_blocks, r\"^```julia\\n|```\\n$\" => \"\")  # remove the code fences\nend\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\") == \"println(\\\"hello world\\\")\"","status":200,"tokens":[0,199],"elapsed":6.488650019,"_type":"aimessage"}]