[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"function extract_julia_code(md::String)\n    out = \"\"\n    in_fence = false\n    fence_start = 0\n    for (i, c) in enumerate(md)\n        if c == '\\n' && i > 0 && md[i-1] == '\\\\'\n            # Handle escaped newline\n            out += \"\\n\"\n            continue\n        end\n        if not in_fence {\n            if c == '`' && md[i+1:i+3] == \"```\" || md[i-1:i-2] == \"```\"\n                in_fence = true\n                if fence_start == 0 {\n                    fence_start = i\n                }\n            end\n        } else if c == '`' && md[i+1:i+3] != \"```\" || md[i-1:i-2] != \"```\"\n            in_fence = false\n        end\n        if in_fence {\n            out += (c == '\\n' ? ' ' : c)\n        }\n    end\n    return out\nend","status":200,"tokens":[220,265],"elapsed":20.051817121,"_type":"aimessage"}]