[{"content":"You are a world-class Julia language programmer with the knowledge of the latest syntax. Your communication is brief and concise. You're precise and answer only when you're confident in the high quality of your answer.","variables":[],"_type":"systemmessage"},{"content":"# Question\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.","variables":["ask"],"_type":"usermessage"},{"content":"```julia\nfunction extract_julia_code(md::AbstractString)::String\n    # Regular expression to capture code fence lines and content\n    rgx = Regex(\"^((?:\\s*)(-{3,})[^\\n]*-{3,}(?:\\s*)$)(\\n(?:[^\\n]*))?\")\n\n    # Split markdown into blocks by line breaks (capturing groups are discarded)\n    blocks = split.(md, r\"\\n{2,}\"; keepempty=true)\n\n    # Initialize result string\n    result = \"\"\n\n    # Iterate over blocks and extract code fences\n    for block in blocks\n        m = match(rgx, block)\n        if m !== nothing\n            # Remove leading spaces from content\n            content = replace(m.captures[3], r\"^\\s+\" => \"\")\n            # Append to result with newline if not the last code fence\n            result *= (content * \"\\n\")\n        else\n            # Add a blank line after non-code blocks\n            result *= \"\\n\"\n        end\n    end\n\n    return result\nend\n```\n\nThis function assumes that `md` is a string containing Markdown formatted text with Julia code blocks delimited by triple dashes (`---`). It uses regular expressions to capture the code fence lines and content, discarding any leading whitespace from the content, and joins all the captured code blocks together into one string. Non-code block lines are ignored and result in a newline being added to the final result string.","status":200,"tokens":[0,358],"elapsed":9.528885924,"_type":"aimessage"}]